services:
    service.loggerAware:
        class: Grabagame\BookingBundle\Service\LoggerAware

    service.booking:
        class: Grabagame\BookingBundle\Service\BookingService
        parent: service.loggerAware
        calls:
            - [ setDoctrine, [@doctrine] ]
            - [ setLogger, [@logger, %base_logging_url%, 'BookingService'] ]
            - [ setMemberService, [@service.member] ]

    service.club:
        class: Grabagame\BookingBundle\Service\ClubService
        parent: service.loggerAware
        calls:
            - [ setDoctrine, [@doctrine] ]
            - [ setBookingService, [@service.booking] ]
            - [ setLogger, [@logger, %base_logging_url%, 'ClubService'] ]

    service.member:
        class: Grabagame\BookingBundle\Service\MemberService
        parent: service.loggerAware
        calls:
            - [ setDoctrine, [@doctrine] ]
            - [ setMailer, [@mailer] ]
            - [ setSecurityContext, [@security.context] ]
            - [ setLogger, [@logger, %base_logging_url%, 'MemberService'] ]

    service.registration.form.type:
        class: Grabagame\BookingBundle\Form\Type\RegistrationType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: grabagame_user_registration }

    service.group:
        class: Grabagame\BookingBundle\Service\GroupService
        calls:
          - [ setDoctrine, [@doctrine] ]
          - [ setLogger, [@logger, %base_logging_url%, "GroupService"] ]
        parent: service.loggerAware

    service.exception_listener:
        class: Grabagame\BookingBundle\EventListener\ExceptionListener
        calls:
          - [ setTemplating, [@templating] ]
          - [ setLogger, [@logger, %base_logging_url%, "Exceptions"] ]
        tags:
          - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }          
        parent: service.loggerAware

    service.timezone_listener:
        class: Grabagame\BookingBundle\EventListener\TimezoneListener
        calls:
          - [ setSecurityContext, [@security.context] ]
          - [ setConnection, [@database_connection] ]
        tags:
          - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }          
